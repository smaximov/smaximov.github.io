<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Discourse | Без названия]]></title>
  <link href="http://blog.smaximov.info/blog/categories/discourse/atom.xml" rel="self"/>
  <link href="http://blog.smaximov.info/"/>
  <updated>2014-04-09T21:57:51+11:00</updated>
  <id>http://blog.smaximov.info/</id>
  <author>
    <name><![CDATA[Сергей Максимов]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Поднимаем Discourse на Ubuntu Server 12.04]]></title>
    <link href="http://blog.smaximov.info/blog/2014/02/21/setting-up-discourse-on-ubuntu-server-12-dot-04/"/>
    <updated>2014-02-21T21:04:00+11:00</updated>
    <id>http://blog.smaximov.info/blog/2014/02/21/setting-up-discourse-on-ubuntu-server-12-dot-04</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section">Введение</a></li>
  <li><a href="#section-1">Настройка сервера</a>    <ul>
      <li><a href="#section-2">Пререквизиты</a></li>
      <li><a href="#section-3">Создание нового пользователя</a></li>
      <li><a href="#ruby">Установка Ruby</a></li>
      <li><a href="#discourse">Получение исходников Discourse</a></li>
      <li><a href="#postgres--">Подготовка Postgres к использованию</a></li>
      <li><a href="#discourse-1">Конфигурация Discourse</a>        <ul>
          <li><a href="#discourseconf">discourse.conf</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#host-address-for-db-server-uncomment-if-needed">host address for db server, uncomment if needed</a></li>
  <li><a href="#port-running-db-server-uncomment-if-needed">port running db server, uncomment if needed</a></li>
  <li><a href="#username-accessing-database-if-connecting-remotely">username accessing database, if connecting remotely</a></li>
  <li><a href="#password-used-to-access-the-db-if-connecting-remotely">password used to access the db, if connecting remotely</a>    <ul>
      <li><a href="#discourse-2">Инициализация Discourse</a></li>
      <li><a href="#nginx">Настройка nginx</a></li>
      <li><a href="#postfix">Настройка Postfix</a></li>
      <li><a href="#bluepill">Установка и настройка Bluepill</a></li>
    </ul>
  </li>
  <li><a href="#discourse-3">Обновление Discourse</a></li>
  <li><a href="#section-4">Заключение</a></li>
  <li><a href="#section-5">Ссылки</a></li>
  <li><a href="#update">Update</a></li>
</ul>

<h1 id="section">Введение</h1>

<p><a href="http://www.discourse.org">Discourse</a> — это молодой и активно
развивающийся opensource-форум<sup id="fnref:disc-platform"><a href="#fn:disc-platform" rel="footnote">1</a></sup>, одним из создателей которого является
широко известный в узких кругах программист и блоггер Jeff Atwood<sup id="fnref:atwood"><a href="#fn:atwood" rel="footnote">2</a></sup> a.k.a.
<a href="http://blog.codinghorror.com">codinghorror</a>.</p>

<p>Discourse отличается от традиционных форумов (прежде всего от phpBB,
vBulletin и их клонов) динамичностью, своим подходом к организации
обсуждений<sup id="fnref:organisation"><a href="#fn:organisation" rel="footnote">3</a></sup>, продвинутой системой уведомлений и
отслеживания сообщений, responsive-версткой и поддержной мобильных
браузеров. Ещё одно отличие от привычных форумов — ориентация на
community-модерацию, которая позволяет наиболее уважаемым и активным
участникам форума принимать участие в его управлении.</p>

<!-- more -->

<h1 id="section-1">Настройка сервера</h1>

<p>Использовался сервер со следующими характеристиками:</p>

<ul>
  <li>Ubuntu 12.04 LTS</li>
  <li>4 Xeon vCPU</li>
  <li>4GB ECC RAM</li>
  <li>60GB SSD</li>
</ul>

<h2 id="section-2">Пререквизиты</h2>

<p>Нам потребуется следующее ПО:</p>

<ul>
  <li>Postgres 9.1+ в качестве СУБД.</li>
  <li>Redis 2+ для кэша, job queue и пр.</li>
  <li>nginx в качестве вэб-сервера.</li>
  <li>Postfix в качестве почтового сервера.</li>
</ul>

<p>Дополнительное ПО:</p>

<ul>
  <li>git — для клонирования репозитория и управления кодом.</li>
  <li>make, g++ — для сборки gem native extensions.</li>
  <li>libxml2, libxslt, postgresql-server-dev-9.1 — зависимости при сборке.</li>
  <li>emacs — для редактирования конфигов.</li>
</ul>

<p>Установка проводится средствами пакетного менеджера.</p>

<h2 id="section-3">Создание нового пользователя</h2>

<p>Плохим тоном считается использование веб-сервисов из-под
рута, поэтому создадим нового пользователя и добавим его
в группу <strong>sudo</strong><sup id="fnref:sudo"><a href="#fn:sudo" rel="footnote">4</a></sup>:</p>

<p><code>bash
adduser --shell /bin/bash --gecos '' nameless
usermod -a -g sudo nameless
</code></p>

<p>Сменим текущего пользователя (<strong>root</strong>) на <strong>nameless</strong>:</p>

<p><code>bash
su - nameless
</code></p>

<p><strong>Внимание</strong>: <em>все дальнейшие операции выполняются из-под пользователя <strong>nameless</strong>!</em></p>

<p>Также создадим директорию, в которой будет находится Discourse, и
дадим на неё права новому пользователю:</p>

<p><code>bash
sudo install -d -m 755 -o nameless -g nameless /var/www/discourse
</code></p>

<h2 id="ruby">Установка Ruby</h2>

<p>Бэкенд <strong>Discourse</strong> написан на <a href="https://www.ruby-lang.org/">Ruby</a> с
использованием вэб-фреймворка
<a href="http://rubyonrails.org/">Ruby on Rails</a>. Для установки Ruby я буду
использовать <a href="http://rvm.io/">RVM</a> — Ruby Version Manager.</p>

<p>Установка RVM в случае использовании Bash как shell’а по умолчанию
предельна проста:</p>

<p><code>bash
curl -sSL https://get.rvm.io | bash -s stable
</code></p>

<p>Далее, чтобы изменения вступили в силу, надо выполнить</p>

<p><code>bash
. ~/.rvm/scripts/rvm
</code></p>

<p>или перезапустить текущую сессию.</p>

<p>С помощью RVM установим последнюю на текущий момент версию Ruby:</p>

<p><code>bash
# установить Ruby 2.1.0
rvm install 2.1.0
# использовать версию 2.1.0 по умолчанию
rvm use 2.1.0 --default
</code></p>

<p>Также необходимо установить Bundler для управления зависимостями
gem’ов Discourse:</p>

<p><code>bash
gem install bundler
</code></p>

<h2 id="discourse">Получение исходников Discourse</h2>

<p>Склонируем репозиторий Discourse в заранее созданную директорию:</p>

<p><code>bash
git clone git://github.com/discourse/discourse.git /var/www/discourse
</code></p>

<p>Перейдём в эту директорию и установим необходимые зависимости:</p>

<p><code>bash
cd /var/www/discourse/
bundle install
</code></p>

<h2 id="postgres--">Подготовка Postgres к использованию</h2>

<p>Добавим роль для текущего пользователя:</p>

<p><code>bash
sudo -u postgres createuser -s nameless
</code></p>

<p>Создадим базу данных:</p>

<p><code>bash
createdb discourse_prod
</code></p>

<h2 id="discourse-1">Конфигурация Discourse</h2>

<p>Перейдём в директорию <code>config</code> и скопируем шаблонные конфиги:</p>

<p><code>bash
cp discourse_quickstart.conf discourse.conf
cp discourse.pill.sample discourse.pill
</code></p>

<h3 id="discourseconf">discourse.conf</h3>

<p>Укажем имя хоста для форума:</p>

<p><code>
# hostname running the forum; i.e the external address of your form.
hostname = "grant.smaximov.info"
</code></p>

<p>Изменим настройки соединения с Postgres:</p>

<p>```
# database name running discourse, in INSTALL-ubuntu this is discourse_prod
db_name = discourse_prod</p>

<h1 id="host-address-for-db-server-uncomment-if-needed">host address for db server, uncomment if needed</h1>
<p>db_host = localhost</p>

<h1 id="port-running-db-server-uncomment-if-needed">port running db server, uncomment if needed</h1>
<p># db_port = 5432</p>

<h1 id="username-accessing-database-if-connecting-remotely">username accessing database, if connecting remotely</h1>
<p>db_username = nameless</p>

<h1 id="password-used-to-access-the-db-if-connecting-remotely">password used to access the db, if connecting remotely</h1>
<p>db_password = secret</p>

<p>```</p>

<p>Настройки Redis можно оставить без изменения.</p>

<h2 id="discourse-2">Инициализация Discourse</h2>

<p>Выполним первоначальную миграцию базы данных и компиляцию
статических файлов:</p>

<p><code>bash
RAILS_ENV=production bundle exec rake db:migrate
RAILS_ENV=production bundle exec rake assets:precompile
</code></p>

<h2 id="nginx">Настройка nginx</h2>

<p>Скопируем конфигурационные файлы из под обычного пользователя:</p>

<p><code>bash
sudo cp /var/www/discourse/config/nginx.global.conf /etc/nginx/conf.d/local-server.conf
sudo cp /var/www/discourse/config/nginx.sample.conf /etc/nginx/conf.d/discourse.conf
</code></p>

<p>Укажем имя сервера в <code>/etc/nginx.conf.d/discourse.conf</code>:</p>

<p><code>
server_name grant.smaximov.info;
</code></p>

<p>Осталось перезапустить nginx:</p>

<p><code>bash
sudo service nginx reload
</code></p>

<h2 id="postfix">Настройка Postfix</h2>

<p>В файле <code>/etc/hostname</code> укажем доменное имя сервера.</p>

<p>Для пересылки писем будем использовать <a href="mandrillapp.com">Mandrill</a>.
Создадим там учётную запись и сгенерируем для неё API KEY, добавив
ограничения: доступ только с IP сервера и типы сообщений <strong>send</strong>,
<strong>send-raw</strong>.</p>

<p>Создадим файл <code>/etc/postfix/sasl/passwd</code> со следующим содержимым</p>

<p><code>
[smtp.mandrillapp.com] MANDRILL_ACCOUNT:API_KEY
</code></p>

<p>где <code>MANDRILL_ACCOUNT</code> — учётная запись Mandrill, а <code>API_KEY</code> —
сгенерированный для неё API KEY.</p>

<p>Ограничим права на этот файл:</p>

<p><code>bash
sudo chmod 600 /etc/postfix/sasl/passwd
</code></p>

<p>Обновим настройки Postfix (эту команду следует выполнять при каждом
изменении файла):</p>

<p><code>bash
sudo postmap /etc/postfix/sasl/passwd
</code></p>

<p>Отредактируем <code>/etc/postfix/main.cf</code>, настроив
<strong>sasl</strong>-аутентификацию:</p>

<p><code>
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/sasl/passwd
smtp_sasl_security_options = noanonymous
smtp_use_tls = yes
</code></p>

<p>Там же укажем релей:</p>

<p><code>
relayhost = [smtp.mandrillapp.com]
</code></p>

<p>Перезапустим Postfix:</p>

<p><code>
sudo service postfix restart
</code></p>

<p>Теперь проверим работоспособность конфигурации:</p>

<p><code>bash
sendmail your.real.email@gmail.com
From: admin@smaximov.info
Subject: Test message from Postfix
Make sure that everything is OK.
</code></p>

<p>Если письмо не пришло, нужно смотреть <code>/var/log/syslog</code> на предмет
возможных проблем.</p>

<p>После этого можно проверить, отсылает ли Discourse почту. Для этого
нужно в админке Discourse перейти в <strong>Email</strong> → <strong>Settings</strong> и
отослать тестовое письмо на свой адрес.</p>

<h2 id="bluepill">Установка и настройка Bluepill</h2>

<p><code>bash
gem install bluepill
echo 'alias bluepill="NOEXEC_DISABLE=1 bluepill --no-privileged -c ~/.bluepill"' &gt;&gt; ~/.bash_aliases
rvm wrapper $(rvm current) bootup bluepill
rvm wrapper $(rvm current) bootup bundle
</code></p>

<p>Запускаем Discourse:</p>

<p><code>bash
RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ROOT=/var/www/discourse \
    RAILS_ENV=production NUM_WEBS=4 bluepill --no-privileged \
    -c ~/.bluepill load /var/www/discourse/config/discourse.pill
</code></p>

<p>Добавляем эту же строку в crontab при <code>@reload</code>.</p>

<h1 id="discourse-3">Обновление Discourse</h1>

<p>Для обновления Discourse можно использовать следующий скрипт:</p>

<p>``` bash
#!/bin/bash
# -<em>- mode: sh -</em>-</p>

<p>DATESTAMP=$(TZ=UTC date +%F-%T)
BACKUP_DIR=”${HOME%%/}/backup”
DISCOURSE_DIR=”/var/www/discourse”
DISCOURSE_PARENT=”$(dirname ${DISCOURSE_DIR})”
DISCOURSE_NAME=”$(basename ${DISCOURSE_DIR})”</p>

<p>bluepill –no-privileged stop
bluepill –no-privileged quit</p>

<p>mkdir -vp $BACKUP_DIR
pg_dump –no-owner –clean discourse_prod | gzip -c &gt; “${BACKUP_DIR}/discourse-db-${DATESTAMP}.sql.gz”
tar cfz “${BACKUP_DIR}/discourse-dir-${DATESTAMP}.tar.gz” -C $DISCOURSE_PARENT $DISCOURSE_NAME</p>

<p>cd $DISCOURSE_DIR
git checkout master
git pull origin master
git fetch –tags</p>

<p>bundle install –without test –deployment
RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ENV=production bundle exec rake db:migrate
RUBY_GC_MALLOC_LIMIT=90000000 RAILS_ENV=production bundle exec rake assets:precompile</p>

<p>eval “$(crontab -l | sed -e ‘/^#/d’ -e ‘s/^@reboot //’)”
```</p>

<h1 id="section-4">Заключение</h1>

<p>Вот мы и получили работающий экземпляр Discourse. Что можно сделать
дальше?</p>

<ul>
  <li>
    <p>Настроить сайт под себя. Выбор опций для настройки достаточно велик:
от локали по умолчанию до параметров аутентификации и авторизации.</p>
  </li>
  <li>
    <p>Изменить внешний вид сайта: написать кастомные стили…</p>
  </li>
  <li>
    <p>Заняться начальным наполнением сайта.</p>
  </li>
  <li>
    <p>…</p>
  </li>
</ul>

<h1 id="section-5">Ссылки</h1>

<ul>
  <li>
    <p><a href="http://www.discourse.org/">Discourse Homepage</a></p>
  </li>
  <li>
    <p><a href="http://github.com/discourse/discourse">Discourse GitHub Repo</a></p>
  </li>
  <li>
    <p><a href="https://github.com/discourse/discourse/blob/master/docs/INSTALL-ubuntu.md">Official Discource Install Guide</a></p>
  </li>
</ul>

<h1 id="update">Update</h1>

<p>Тем временем не так давно появилось
<a href="https://github.com/discourse/discourse/blob/master/docs/INSTALL-digital-ocean.md">руководство</a>
по поднятию Discourse с помощью образа <a href="https://www.docker.io/">Docker</a>.</p>

<div class="footnotes">
  <ol>
    <li id="fn:disc-platform">
      <p>…или Discussion Platform, как называют его авторы<a href="#fnref:disc-platform" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:atwood">
      <p><a href="https://stackoverflow.com">StackOverflow</a> и <a href="https://stackexchange.com">StackExchange</a> — тоже его рук дело<a href="#fnref:atwood" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:organisation">
      <p>группировка по тегам вместо подфорумов, отсутствие разделения топиков на страницы<a href="#fnref:organisation" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:sudo">
      <p>Это даст возможность использовать утилиту sudo без необходимости править файл <code>/etc/sudoers</code><a href="#fnref:sudo" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
